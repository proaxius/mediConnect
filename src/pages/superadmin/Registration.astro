---

---

<div class="flex flex-col justify-center place-items-center h-screen w-screen">
  <form
    id="RegisterForm"
    class="flex flex-col gap-8 justify-center place-items-center"
    method="POST"
  >
    <div class="flex gap-4 justify-around w-full">
      <label for="Create name">Create name</label>
      <input required="true" id="name" placeholder="name" />
    </div>
    <div class="flex gap-4 justify-around w-full">
      <label for="Create Username">Create Username</label>
      <input required="true" id="username" placeholder="Username" />
    </div>

    <div class="flex gap-4 justify-around w-full">
      <label for="Email">Email</label>
      <input required="true" id="email" placeholder="Email" type="email" />
    </div>

    <div class="flex gap-4 justify-around w-full">
      <label for="Position">Position</label>
      <select required="true" id="position" required={true}>
        <option value="Trainee">Trainee</option>
        <option value="Doctor">Doctor </option>
        <option value="Nurse">Nurse </option>
        <option value="Ward Manager">Ward Manager </option>
        <option value="Managment">Managment</option>
        <option value="Head of Department">Head of Department</option>
        <option value="Helper">Helper</option>
        <option value="IT Department">IT Department</option>
      </select>
    </div>
    <div class="flex gap-4 justify-around w-full">
      <label for="Password">Password</label>
      <input 
      required="true"
      id="password"
      type="password"
      placeholder="Password"
      />
    </div>
    
    <p>User a strong Password you set a small Password but Chances are account will be suspended</p>
    <div class="flex gap-4 justify-around w-full">
      <label for="Confirm password">Confirm Password</label>
      <input
        required="true"
        id="confirmPassword"
        type="password"
        placeholder="Confirm Password"
      />
    </div>

    <button type="submit"> Create User </button>
    <button type="reset"> Clear All </button>
  </form>
  
</div>

<script is:inline>
  const userForm = document.getElementById("RegisterForm");

  userForm.addEventListener("submit", async (event) => {
    event.preventDefault();


    try {
      // const formData = new(event.target);
      // console.log("event.target", event.target);
      // console.log("formdata", formData);
      // const data = Object.fromEntries(formData.entries());
      // console.log('data', data);
      const request = event.target;
      const name = JSON.stringify(request[0].value);
      const username = JSON.stringify(request[1].value);
      const email = JSON.stringify(request[2].value);
      const position = JSON.stringify(request[3].value);
      const password = JSON.stringify(request[4].value);
      const data = {
        name,
        username,
        email,
        position,
        password,
      };
      console.log("data", JSON.stringify(data));
      const response = await fetch("/api/newUser.json", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      if (response.ok) {
        alert(`User created successfully as ${data.username}`);
      } else {
        console.error("Submission failed", result.message);
      }
    } catch (error) {
      console.log(error);
    }
  });
</script>
